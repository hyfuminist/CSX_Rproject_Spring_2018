SayHello <- function (name) {
print(________________)
}
SayHello("Pecu") # Output > "Hello, Pecu"
SayHello <- function ("fumino") {
print("Hello, fumino!")
}
SayHello <- function ("fumino") {
print("Hello, fumino!")
}
SayHello("Pecu") # Output > "Hello, Pecu"
SayHello <- function (name) {
return(print("Hello, name!"))
}
SayHello(fumino) # Output > "Hello, Pecu"
SayHello <- function ("name") {
return(print("Hello, name!"))
}
SayHello <- function (name) {
return(print("Hello, name!"))
}
SayHello(hy) # Output > "Hello, Pecu"
SayHello <- function (name) {
return(print(paste("Hello,",name)))
}
SayHello(hy) # Output > "Hello, Pecu"
SayHello("hy") # Output > "Hello, Pecu"
SayHello <- function (name) {
return(cat("Hello,",name))
}
SayHello("hy") # Output > "Hello, Pecu"
GetBmi <- function (my.height.cm, my.weight.kg) {
# Create my.height.m by my.height.cm
my.height.m <- my.height.cm / 100
# Create my.bmi with BMI(Body Mass Index) formula
my.bmi <- my.weight.kg / (my.height.m) ^ 2
# Return my.bmi
return (my.bmi)
}
GetBmi(180, 55) # return 16.97531
CheckBmiLevel <- function (my.height.cm, my.weight.kg) {
# Call the GetBmi function we just made
my.bmi <- GetBmi(my.height.cm, my.weight.kg)
if (my.bmi >= 35) {
return(paste("Your bmi: ", my.bmi, ", 重度肥胖!"))
} else if (my.bmi >= 30) {
return(paste("Your bmi: ", my.bmi, ", 中度肥胖!"))
} else if (my.bmi >= 27) {
return(paste("Your bmi: ", my.bmi, ", 輕度肥胖!"))
} else if (my.bmi >= 24) {
return(paste("Your bmi: ", my.bmi, ", 過重!"))
} else if (my.bmi >= 18.5) {
return(paste("Your bmi: ", my.bmi, ", 正常範圍"))
} else {
return(paste("Your bmi: ", my.bmi, ", 過輕!"))
}
}
bmi.level.msg <- CheckBmiLevel(176, 70)
bmi.level.msg # "Your bmi:  22.5981404958678 , 正常範圍"
GetLargest(vec_1)
GetLargest <- function (vector) {
return(print(paste("The Largest Number is :", max(vector))))
}
vec_1 <- c(1, 5, 10, 200, 2000, 121)
GetLargest(vec_1)
?read.table
df <- read.table('test_data.csv', sep = "", header = TRUE, stringsAsFactors = F)
df
df <- read.table('test_data.csv', sep = "", header = FALSE, stringsAsFactors = F)
df
df <- read.table('test_data.csv', sep = "", header = TRUE, stringsAsFactors = T)
df
df <- read.table('test_data.csv', sep = ",", header = TRUE, stringsAsFactors = F)
df
dim(df)
head(df, 6)
tail(df, 6)
summary(df)
summary(df)
str(df)
df <- read.table('test_data.csv', sep = ",", header = TRUE, stringsAsFactors = T)
summary(df)
df <- read.table('test_data.csv', sep = ",", header = TRUE, stringsAsFactors = F)
str(df)
df <- read.table('test_data.csv', sep = ",", header = TRUE, stringsAsFactors = T)
str(df)
df <- read.table('test_data.csv', sep = ",", header = TRUE, stringsAsFactors = F)
df$School <- as.factor(df$school)
df$School <- as.factor(df$school)
df$Sex <- as.factor(df$sex)
df.School <- as.factor(df$school)
df.Sex <- as.factor(df$sex)
str(df)
df$School <- as.factor(df$school)
df$Sex <- as.factor(df$sex)
str(df)
?as.factor
as.factor(df$school)
as.factor(df$sex)
str(df)
df <- read.table('test_data.csv', sep = ",", header = TRUE, stringsAsFactors = F)
as.factor(df$school)
str(df)
df$School <- factor(df$school)
summary(df)
df$Sex <- as.factor(df$sex)
summary(df)
as.factor(df$school)
df$School <- as.factor(df$school)
df
df$School <- as.factor(df$School)
df$Sex <- as.factor(df$Sex)
summary(df)
df$School <- as.factor(df$School)
?cbind
str(df)
df <- cbind(df, Height, Weight)
df <- rbind(df, kobe)
Height <- c(179, 165, 158, 165, 172, 170, 168, 163, 169, 155)
Weight <- c(69, 62, 46, 50, 72, 70, 52, 49, 63, 49)
Kobe <- c("Kobe", "A", "M", NA, 39, 198, 96)
df <- cbind(df, Height, Weight)
df <- rbind(df, kobe)
str(df)
Kobe <- c("Kobe", "A", "M", NA, 39, 198, 96)
df <- rbind(df, kobe)
df <- rbind(df, Kobe)
str(df)
df$Grade[NA] <- 990
df$Grade
df$Grade[NA] <- 990
df$Grade
df$Grade[11] <- 990
df$Grade
df$Grade <- as.integer(df$Grade)
df$Age <- as.numeric(df$Age)
df$Height <- as.numeric(df$Height)
df$Weight <- as.numeric(df$Weight)
str(df)
?order
df <- df[order(df$Grade, decreasing = TRUE)]
df <- df[order(df$Grade, decreasing = TRUE), df]
?df[]
df <- df[order(df$Grade, decreasing = TRUE), ]
df <- subset(df, select = c(-Age))
?subset
subset(df, Height > 170 & ToeicGrade > 900, select = c(Name, ToeicGrade, Height))
str(df)
df <- df[order(df$Grade, decreasing = TRUE), ]
df <- subset(df, select = c(-Age))
names(df)[4] <- "ToeicGrade"
subset(df, Height > 170 & ToeicGrade > 900, select = c(Name, ToeicGrade, Height))
df[df$School == A, ]
df[df$School == "A", ]
df.sport <- data.frame(Name = c("Ali", "Petty", "Kobe"), FavSport = c("basketball", "baseball", "baseketball"))
df.sport
?cut
df.sport <- data.frame(Name = c("Ali", "Petty", "Kobe"), FavSport = c("basketball", "baseball", "baseketball"))
df$ToeicLevel <- cut(x = df$ToeicGrade,
breaks = c(0, 600, 700, 800, 900, Inf),
labels = c("E", "D", "C", "B", "A"))
df
df$Bmi <- mapply(GetBmi, df$Height, df$Weight)
df <- merge(df, df.sport, by = 'Name', all.x = T)
View(df)
df <- merge(df, df.sport, by = 'Name', all = T)
View(df)
df <- merge(df, df.sport, by = 'Name', all.x = T)
View(df)
df <- merge(df, df.sport, by = 'Name', all.x = T)
df <- merge(df, df.sport, by = 'Name', all.x = T)
df$Bmi <- mapply(GetBmi, df$Height, df$Weight)
df <- merge(df, df.sport, by = 'Name', all.x = T)
df.sport <- data.frame(Name = c("Ali", "Petty", "Kobe"), FavSport = c("basketball", "baseball", "baseketball"))
df <- merge(df, df.sport, by = 'Name', all.x = T)
GetBmi <- function (my.height.cm, my.weight.kg) {
# Create my.height.m by my.height.cm
my.height.m <- my.height.cm / 100
# Create my.bmi with BMI(Body Mass Index) formula
my.bmi <- my.weight.kg / (my.height.m) ^ 2
# Return my.bmi
return (my.bmi)
}
df <- read.table('test_data.csv', sep = ",", header = TRUE, stringsAsFactors = F)
dim(df)
head(df, 6)
tail(df, 6)
summary(df)
str(df)
df$School <- as.factor(df$School)
df$Sex <- as.factor(df$Sex)
Height <- c(179, 165, 158, 165, 172, 170, 168, 163, 169, 155)
Weight <- c(69, 62, 46, 50, 72, 70, 52, 49, 63, 49)
Kobe <- c("Kobe", "A", "M", NA, 39, 198, 96)
df <- cbind(df, Height, Weight)
df <- rbind(df, Kobe)
str(df)
df$Grade[11] <- 990
df$Grade <- as.integer(df$Grade)
df$Age <- as.numeric(df$Age)
df$Height <- as.numeric(df$Height)
df$Weight <- as.numeric(df$Weight)
str(df)
df <- df[order(df$Grade, decreasing = TRUE), ]
df <- subset(df, select = c(-Age))
names(df)[4] <- "ToeicGrade"
subset(df, Height > 170 & ToeicGrade > 900, select = c(Name, ToeicGrade, Height))
df[df$School == "A", ]
df.sport <- data.frame(Name = c("Ali", "Petty", "Kobe"), FavSport = c("basketball", "baseball", "baseketball"))
df$ToeicLevel <- cut(x = df$ToeicGrade,
breaks = c(0, 600, 700, 800, 900, Inf),
labels = c("E", "D", "C", "B", "A"))
df$Bmi <- mapply(GetBmi, df$Height, df$Weight)
df <- merge(df, df.sport, by = 'Name', all.x = T)
View(df)
rm(list = ls())
rm(list = ls())
library(rvest)
?rm
?rm
class(ls())
list
install.packages("rvest")
library(rvest)
library(rvest)
library(rvest)
library(rvest)
url <- "https://www.ptt.cc/bbs/NBA/index5720.html"
res <- read_html(url)
nba.article.link <- raw.titles %>% html_node("a") %>% html_attr('href')
url <- "https://www.ptt.cc/bbs/NBA/index5720.html"
res <- read_html(url)
raw.titles <- res %>% html_nodes("div.title")
nba.article.link <- raw.titles %>% html_node("a") %>% html_attr('href')
nba.article.title <- raw.titles %>% html_text()
nba.df <- data.frame(nba.article.title, nba.article.link)
nba.df.col.names <- c("title", "link")
colnames(nba.df) <- nba.df.col.names
